---
  - name: Delete cosmos balance query command
    file:
      dest: "/root/{{ prefix }}query-balance"
      state: absent
    when: createcommands != True

  - name: Create cosmos balance query command
    copy:
      mode: 0700
      dest: "/root/{{ prefix }}query-balance"
      content: |
        #!/usr/bin/env bash
        . /root/.{{ prefix }}cosmos.env.sh

        if /root/go/bin/{{ prefix }}issynced; then
          echo -n
        else
          echo "network is not synced"
          exit 1
        fi


        CHAINCOMMAND="{% if cosmovisor != False %}{{ cosmospath }}/cosmovisor/current/bin/{{chaincommand}}{% else %}/root/go/bin/{{chaincommand}}{% endif %}"
        if [ "x${1}" != "x" ]; then
          ADDRESS=${1}
        else
          ADDRESS="{{ address }}"
        fi

        ${CHAINCOMMAND} query bank balances ${ADDRESS} {{ extrabin }} {% if forcenode != False and node != False %}--node {{ node }}{% endif %} ${@: 2}
        exit $?
    when: createcommands == True

  - name: Delete cosmos balance get command
    file:
      dest: "/root/go/bin/{{ prefix }}get-balance"
      state: absent
    when: createcommands != True

  - name: Create cosmos balance query command
    copy:
      mode: 0700
      dest: "/root/go/bin/{{ prefix }}get-balance"
      content: |
        #!/usr/bin/env bash

        TOKEN='{{ token }}'

        # Get balance or zero
        BALANCE=$(/root/{{ prefix }}query-balance $* |grep ${TOKEN} -B1 | grep amount|cut -d ":" -f2-|xargs echo|cut -d "." -f 1)
        /root/{{ prefix }}query-balance $* >/dev/null 2>&1
        SALIDA=$?

        if [ "x${BALANCE}" == "x" ]; then
            BALANCE=0
        fi

        echo ${BALANCE}
        exit ${SALIDA}
    when: createcommands == True
