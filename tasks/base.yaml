---
# Requires: Ansible 2.2 (due to check_mode and timezone)
- hosts: all
  user: root
  vars:
    console_keymap: en
    console_font: eurlatgr
    system_locale: en_US.UTF-8
    system_timezone: Europe/Madrid
    root_shell: /bin/bash
  tasks:
    - name: Install helpful packages
      package: name={{ item }} state=present
      with_items:
        - mailutils
        - monit

      ignore_errors: true

    - name: Configure User environment
      lineinfile:
        dest: /root/.bashrc
        create: true
        state: present
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: "^export GOPATH", line: "export GOPATH=~/go" }
        - { regexp: "^export PATH.*", line: "export PATH=$PATH:$GOPATH/bin" }
        - {
            regexp: "^export NOTI_TELEGRAM_CHATID.*",
            line: "export NOTI_TELEGRAM_CHATID={{ telegramchatid }}",
          }
        - {
            regexp: "^export NOTI_TELEGRAM_TOKEN.*",
            line: "export NOTI_TELEGRAM_TOKEN={{ telegramtoken }}",
          }
        - {
            regexp: "^source /etc/profile.d/powerline.sh",
            line: "source /etc/profile.d/powerline.sh",
          }

    - name: Download noti binary
      shell: curl -L $(curl -s https://api.github.com/repos/variadico/noti/releases/latest | awk '/browser_download_url/ { print $2 }' | grep 'linux-amd64' | sed 's/"//g') | tar -xz
      args:
        chdir: /root/go/bin
        creates: /root/go/bin/noti

    - name: Create noti.sh with variables
      copy:
        dest: "/root/go/bin/noti.sh"
        mode: 0755
        content: |
          #!/usr/bin/env bash
          export NOTI_TELEGRAM_TOKEN={{ telegramtoken }}
          export NOTI_TELEGRAM_CHATID={{ telegramchatid }}
          echo "Something failed at `hostname`" | /root/go/bin/noti -g -m -

    - name: Create monit mailing configuration
      copy:
        dest: "{{ monitpath }}/mailing"
        content: |
          set eventqueue
                basedir /var/monit
                slots 5000

          set alert {{ notifications }}
          set mailserver 127.0.0.1

          set httpd port 2812 and
            use address localhost  # only accept connection from localhost
            allow localhost        # allow localhost to connect to the server and
      register: monitservice

    - name: Create noti-disk.sh with variables
      copy:
        dest: "/root/go/bin/noti-disk.sh"
        mode: 0755
        content: |
          #!/usr/bin/env bash
          export NOTI_TELEGRAM_TOKEN={{ telegramtoken }}
          export NOTI_TELEGRAM_CHATID={{ telegramchatid }}
          echo "Disk usage over {{ diskusagewarning }} at `hostame`" | /root/go/bin/noti -g -m -

    - name: Create monit disk monitorization
      copy:
        dest: "{{ monitpath }}/disk"
        content: |
          check device root with path /
            if SPACE usage > {{ diskusagewarning }} then alert
            if SPACE usage > {{ diskusagewarning }} then exec   "/root/go/bin/noti-disk.sh"
      register: monitdisk
      when: monit == True

    - name: Restart monit if required
      service:
        name: monit
        state: restarted
      when: monit and (monitservice.changed or monitdisk.changed)
